openapi: 3.0.3
info:
  title: API gateway
  description: API gateway бэкенда
  version: 0.0.1
servers:
  - description: Local server
    url: http://localhost:8080/
  
paths: 
  /auth/sendVerifyCode:
    post:
      tags:
        - User
      summary: Отправить код на почту
      description: Отправить код верификации
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendVerifyCodeRequest"
      responses:
        200:
          description: успешно отправлен код

  /auth/signUp:
    post:
      tags:
        - User
      summary: Регистрация пользователя
      description: Регистрирует пользователя в системе
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpRequest"
      responses:
        201:
          $ref: "#/components/responses/AuthResponse"
        400:
          $ref: "#/components/responses/ErrorResponse"

  /products:
    post:
      tags: 
        - Product
      description: Добавление товара
      summary: Добавление товара
      security:
        - bearerAuth: [ "admin", "manager" ]
      requestBody: 
        required: true
        content: 
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProductRequest"
      responses:
        201:
          $ref: "#/components/responses/CreateProductResponse"
        400:
          $ref: "#/components/responses/ErrorResponse"

  /products/{productID}:
    get:
      tags:
        - Product
      description: Получение информации о товаре
      summary: Получение информации о товаре
      parameters:
        - $ref: "#/components/parameters/productID"
      responses:
        200:
          $ref: "#/components/responses/GetProductResponse"
        400:
          $ref: "#/components/responses/ErrorResponse"
    delete:
      tags:
        - Product
      description: Удаление товара
      summary: Удаление товара 
      security:
        - bearerAuth: [ "admin", "manager" ]
      parameters:
        - $ref: "#/components/parameters/productID"
      responses:
        204:
          description: Успешно
        400:
          $ref: "#/components/responses/ErrorResponse"

  /auth/signIn:
    post:
      tags:
        - User
      summary: Авторизация пользователя
      description: Авторизирует пользователя в системе
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignInRequest"
      responses:
        201:
          $ref: "#/components/responses/AuthResponse"
        400:
          $ref: "#/components/responses/ErrorResponse"

components:
  schemas:
    User:
      required:
        - id
        - email
        - firstName
        - lastName
        - password
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
        firstName:
          type: string
        lastName: 
          type: string
        password:
          type: string

    Token:
      required:
        - token
        - expiresAt
      properties:
        token:
          type: string
        expiresAt:
          type: integer
          format: int64

    UserToken:
      required:
        - access
        - refresh
      properties:
        access:
          $ref: "#/components/schemas/Token"
        refresh:
          $ref: "#/components/schemas/Token"

    Category:
      type: object
      required: 
        - name
      properties:
        parentCategory:
            $ref: "#/components/schemas/Category"
        name:
          type: string
          example: Аниме фигурки
        childrenCategories:
          type: array
          items:
            $ref: "#/components/schemas/Category"
        products:
          type: array
          items:
            $ref: "#/components/schemas/Product" 

    Product:
      type: object
      required: 
        - id
        - name
        - photoUrl
        - description
        - price
        - categoryName
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        photoUrl:
          type: string
        price:
          type: number
          format: double
        categoryName:
          type: string

    CreateProductRequest:
      type: object
      required: 
        - name
        - description
        - path
        - price
        - categoryName
      properties:
        name:
          type: string
        description:
          type: string
        path:
          type: string
        price:
          type: number
          format: double
        categoryName:
          type: string

    CreateProductResponse:
      type: object
      required:
        - id
        - name
        - description
        - photoUrl
        - price
        - categoryName
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        photoUrl:
          type: string
        price:  
          type: number
          format: double
        categoryName:
          type: string

    GetProductResponse:
      type: object
      required:
        - id
        - name
        - description
        - photoUrl
        - price
        - categoryName
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        photoUrl:
          type: string
        price:  
          type: number
          format: double
        categoryName:
          type: string

    SendVerifyCodeRequest:
      required:
        - email
      properties:
        email:
          type: string

    SignInRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
        
    SignUpRequest:
      type: object
      required:
        - email
        - firstName
        - lastName
        - password
        - code
      properties:
        email:
          type: string
        firstName:  
          type: string
        lastName: 
          type: string
        password:
          type: string
        code:
          type: integer
      
    AuthResponse:
      type: object
      required:
        - auth
        - profile
      properties:
        auth:
          $ref: "#/components/schemas/UserToken"
        profile:
          $ref: "#/components/schemas/User"

    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string

  responses:
    AuthResponse:
      description: Все хорошо
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AuthResponse"

    ErrorResponse:
      description: Что-то не так
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

    CreateProductResponse:
      description: Ответ сервера на создание товара
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateProductResponse"
    
    GetProductResponse:
      description: Успешное получение информации о товаре
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetProductResponse"

  parameters:
    productID:
      name: productID
      in: path
      required: true
      schema:
        type: string
        format: uuid