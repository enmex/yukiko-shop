openapi: 3.0.3
info:
  title: Product Service
  description: Сервис товаров
  version: 0.0.1
servers:
  - description: Local server
    url: http://localhost:8082/

paths:
  /categories:
    post:
      tags:
        - Category
      description: Добавить новую категорию
      summary: Добавить новую категорию
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCategoryRequest"
      responses:
        201:
          description: Всё хорошо
        400:
          $ref: "#/components/responses/ErrorResponse"
    get:
      tags:
        - Category
      description: Получить список категорий
      summary: Получить список категорий
      parameters:
        - in: query
          name: main
          schema:
            type: boolean
        - in: query
          name: leaf
          schema:
            type: boolean
      responses:
        200: 
          $ref: "#/components/responses/GetCategoriesResponse"
        400:
          $ref: "#/components/responses/ErrorResponse"

  /categories/children/{categoryName}:
    get:
      tags:
        - Category
      description: Получить список подкатегорий
      summary: Получить список подкатегорий
      parameters:
        - $ref: "#/components/parameters/categoryName"
      responses:
        200: 
          $ref: "#/components/responses/GetSubCategoriesResponse"
        400:
          $ref: "#/components/responses/ErrorResponse"

  /categories/{categoryName}:
    get:
      tags:
        - Category
      description: Получить список подкатегорий
      summary: Получить список подкатегорий
      parameters:
        - $ref: "#/components/parameters/categoryName"
      responses:
        200: 
          $ref: "#/components/responses/GetCategoryResponse"
        400:
          $ref: "#/components/responses/ErrorResponse"
      

  /products:
    post:
      tags: 
        - Product
      description: Добавление товара
      summary: Добавление товара
      requestBody: 
        required: true
        content: 
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProductRequest"
      responses:
        201:
          $ref: "#/components/responses/CreateProductResponse"
        400:
          $ref: "#/components/responses/ErrorResponse"
    get:
      tags: 
        - Product
      description: Получить список товаров
      summary: Получить список товаров
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        200:
          $ref: "#/components/responses/GetProductsResponse"
        400:
          $ref: "#/components/responses/ErrorResponse"

  /products/{productID}:
    get:
      tags:
        - Product
      description: Получение информации о товаре
      summary: Получение информации о товаре
      parameters:
        - $ref: "#/components/parameters/productID"
      responses:
        200:
          $ref: "#/components/responses/GetProductResponse"
        400:
          $ref: "#/components/responses/ErrorResponse"
    delete:
      tags:
        - Product
      description: Удаление товара
      summary: Удаление товара 
      parameters:
        - $ref: "#/components/parameters/productID"
      responses:
        204:
          description: Успешно
        400:
          $ref: "#/components/responses/ErrorResponse"

components:
  schemas:
    Category:
      type: object
      required: 
        - id
        - children
        - products
        - name
      properties:
        id:
          type: string
          format: uuid
        parent:
            $ref: "#/components/schemas/Category"
        name:
          type: string
          example: Аниме фигурки
        children:
          type: array
          items:
            $ref: "#/components/schemas/Category"
        products:
          type: array
          items:
            $ref: "#/components/schemas/Product" 

    Product:
      type: object
      required: 
        - id
        - name
        - description
        - price
        - categoryName
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        photoUrl:
          type: string
        price:
          type: number
          format: double
        categoryName:
          type: string

    CreateProductRequest:
      type: object
      required: 
        - name
        - description
        - path
        - price
        - categoryName
      properties:
        name:
          type: string
        description:
          type: string
        path:
          type: string
        price:
          type: number
          format: double
        categoryName:
          type: string

    CreateCategoryRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        parent:
          type: string

    CreateProductResponse:
      type: object
      required:
        - id
        - name
        - description
        - photoUrl
        - price
        - categoryName
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        photoUrl:
          type: string
        price:  
          type: number
          format: double
        categoryName:
          type: string

    GetProductResponse:
      type: object
      required:
        - id
        - name
        - description
        - photoUrl
        - price
        - categoryName
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        photoUrl:
          type: string
        price:  
          type: number
          format: double
        categoryName:
          type: string

    GetProductsResponse:
      type: object
      required:
        - products
      properties:
        products:
          type: array
          items: 
            $ref: "#/components/schemas/Product"

    GetCategoriesResponse:
      type: object
      required:
        - categories
      properties:
        categories:
          type: array
          items:
            type: string

    GetSubCategoriesResponse:
      type: object
      required:
        - categories
      properties:
        categories:
          type: array
          items: 
            type: string

    GetCategoryResponse:
      allOf:
        - $ref: "#/components/schemas/Category"
        - type: object
      
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string

  responses:
    CreateProductResponse:
      description: Ответ сервера на создание товара
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateProductResponse"
    
    GetProductResponse:
      description: Успешное получение информации о товаре
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetProductResponse"

    GetProductsResponse:
      description: Список товаров в каталоге
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetProductsResponse"

    GetCategoriesResponse:
      description: Получить список категорий
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetCategoriesResponse"

    GetSubCategoriesResponse:
      description: Получить список подкатегорий
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetSubCategoriesResponse"

    GetCategoryResponse:
      description: Получить категорию
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetCategoryResponse"

    ErrorResponse:
      description: Что-то не так
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

  parameters:
    productID:
      name: productID
      in: path
      required: true
      schema:
        type: string
        format: uuid
    categoryName:
      name: categoryName
      in: path
      required: true
      schema:
        type: string
