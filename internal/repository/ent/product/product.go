// Code generated by entc, DO NOT EDIT.

package product

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the product type in the database.
	Label = "product"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldPhotoURL holds the string denoting the photo_url field in the database.
	FieldPhotoURL = "photo_url"
	// FieldPrice holds the string denoting the price field in the database.
	FieldPrice = "price"
	// FieldCategoryID holds the string denoting the category_id field in the database.
	FieldCategoryID = "category_id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeCategory holds the string denoting the category edge name in mutations.
	EdgeCategory = "category"
	// EdgeProductsInCart holds the string denoting the products_in_cart edge name in mutations.
	EdgeProductsInCart = "products_in_cart"
	// Table holds the table name of the product in the database.
	Table = "products"
	// CategoryTable is the table that holds the category relation/edge.
	CategoryTable = "products"
	// CategoryInverseTable is the table name for the Category entity.
	// It exists in this package in order to avoid circular dependency with the "category" package.
	CategoryInverseTable = "categories"
	// CategoryColumn is the table column denoting the category relation/edge.
	CategoryColumn = "category_id"
	// ProductsInCartTable is the table that holds the products_in_cart relation/edge.
	ProductsInCartTable = "cart_products"
	// ProductsInCartInverseTable is the table name for the CartProduct entity.
	// It exists in this package in order to avoid circular dependency with the "cartproduct" package.
	ProductsInCartInverseTable = "cart_products"
	// ProductsInCartColumn is the table column denoting the products_in_cart relation/edge.
	ProductsInCartColumn = "product_id"
)

// Columns holds all SQL columns for product fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldDescription,
	FieldPhotoURL,
	FieldPrice,
	FieldCategoryID,
	FieldCreatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
