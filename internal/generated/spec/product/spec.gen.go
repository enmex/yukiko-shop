// Package spec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package spec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xYzYrjRhB+FdHJURl5fw6Lj8mGsBDCsiGnZQ49co3di6XWdLeGDEYwP5tkD2FJQs4J",
	"YQ+5OjMxMfOjeYXqNwrdkmzJbo9lsE8JDIOllqq/+r6q6iqNSMijhMcQK0m6I5JQQSNQIIorwXtpqF48",
	"NxcsJl2SUDUgPolpBOZqtu4TAUcpE9AjXSVS8IkMBxBR8+IhFxFVpEvSlPWIT9RJYl6WSrC4T7IsMy/L",
	"hMcS7K6fCaAKXha2X5UrZiHksYJYmZ80SYYspIrxOHgjeWzuzXf8WMAh6ZKPgrlzQbEqA7d1i6IHMhQs",
	"MUZJl+Bv+hwvcaLPPX2GE31qL05x7OEdjs29HP/Bv3GMdzjFiafPMcdLHJtHSOaTz4XgYuvwm1ZdsP80",
	"QD4x/wxQi2uM1wbRF6B2xarDtAvbB32G9zjR7/AOc5x4eI853ugL/QNOShpxinf6Leb6FG9xrL/HKU49",
	"zOv0TprOyB16Ix905w+8x6kNhOs6vhwvPfN3jWNL/g3meGVQZ1VaFHFOFfS5OCkzLQGhWJEB4YANewLi",
	"8onyLlMQybXhXRnNZolGhaD2mvVapGOV3CMC39IoGZo1/MmKc2ui6S1O8Upf6FO8xqnr9YQKiFXdubZ4",
	"y3LS3tlSpGVfs3o9ek2snw5SS1/3Z6/zgzdQ2CvKRIXuFRylINWyUhVXLVhYVwabkNcAmyXbClxhufFX",
	"q/A1Inm0OggcjqmBe0GwEBqO9nh6MIS5q3EaHYBwu9pE5FcHTWHUb/rTgpZ5QdgyLxvm0DJLA674N2K4",
	"XQotCDeP1X4bcLl0cjU5jEBK2ne5t4CqetC1h/ss+l+sjcVacQ42mdxZZZ0ZdkGrjPwXha1JuaBxO2GN",
	"bRYfcoNjqesomtGpPlvoOgxCpuyRXXLvfQ3iuNjwGIQsLHT2OnuPjKc8gZgmjHTJk73O3pOy7FqJgrDR",
	"eyS8OGUWoPyKOf6FYwvmXP/o2bbuUl/o91X3M8Er28tN9XtiNxS2IXvRMxi5VI3TWBTH2ae8d7Llfn/x",
	"IM+a2pmRZXEMedx55PD4F32mf/b0d9apXL/D3BD5tNNZhWNmc6l194lMo4ia7mBzJhXtSxNzVY7tG3tB",
	"Pc/74FLs91nDXexjG3J3D7ukV63U2FCZj4qvy/HwKAVxMp8PhyxiitRnwTLKWaygbzNof4n1Fkw6+/Nt",
	"qLAZO8sa+OsT5WY26TQGRldu1MjeXWYsdJLtE+NhmleM2dtNlZVcPpwdwWj24SIrtBqCAodqH+x431Kx",
	"59ZKpdnL2qeRhUxxuT5/JJh/VHEkx1MXyvpQvR2K1zjuCvx15Waj+f6ByrMjYjeqOrsqOhty5IhyYxnE",
	"ccVIU40veUiHXrFOfJKa/ocMlEq6QTA0awMuVfdZ59njgGT72b8BAAD//zRWNAocFAAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
