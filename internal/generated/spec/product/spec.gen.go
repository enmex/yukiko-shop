// Package spec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package spec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xYT2vjRhT/KmLaoxp5/xwWH9stZaGUZUtPSw4T+cWexdIoM6PQYAT5s233UJa29NxS",
	"9tCrm9TUJBvlK7z5RmVGki3Z41gG+xYIwdJIb36/3/sz72lEQh4lPIZYSdIdkYQKGoECUVwJ3ktD9eK5",
	"uWAx6ZKEqgHxSUwjMFezdZ8IOEqZgB7pKpGCT2Q4gIiaFw+5iKgiXZKmrEd8ok4S87JUgsV9kmWZeVkm",
	"PJZgd/1CAFXwsrD9qlwxCyGPFcTK/KRJMmQhVYzHwRvJY3NvvuOnAg5Jl3wSzMkFxaoM3NYtih7IULDE",
	"GCVdgn/oc7zEiT739BlO9Km9OMWxh7c4Nvdy/A//xTHe4hQnnj7HHC9xbB4hmU++FIKLrcNvWnXB/tsA",
	"+cz8M0AtrjFeG0RfgdqVqg7TLmwf9Bne4US/w1vMceLhHeZ4oy/0TzgpZcQp3uq3mOtT/Ihj/SNOceph",
	"Xpd30iQjd8hG3kvnL7zDqQ2E6zq+HC8983eNYyv+DeZ4ZVBnVVoUcU4V9Lk4KTMtAaFYkQHhgA17AuLy",
	"ifIuUxDJteFdGc1miUaFoPaa9VqkY5XcIwLf0ygZmjX8xTrno4mmtzjFK32hT/Eap67XEyogVnVybfGW",
	"5aQ92dJJy1yzej16TSxPh6gl1/3Z6/zgDRT2ijJRoXsFRylIteypSqsWKqwrg03Ia4DNkm0FrrDc+JtV",
	"+BqRPFodBA5iauBeECyEBtEeTw+GMKcap9EBCDfVJiK/OmgKo36TTwtZ5gVhy7psmEPLKg244t+J4XYl",
	"tCDcOlb7baDl0snV1DACKWnfRW8BVfWgaw/3WfTgrI2dteIcbCq5s8o6M+yCVhl5cGxLbxqDLD7kZvOl",
	"VqPoQKf6bKHVMLCYsud0Kbj3LYjjYsNjELKw0Nnr7D0y9HgCMU0Y6ZIne529J2WttX4JwkbDkfDiaFmA",
	"8jvm+A+OLZhz/bNne7lLfaHfVy3PBK9sAzfV74ndUNgu7EXPYORSNY5gUZxhn/PeyZab/MXTO2s6zMwp",
	"i7PH484jB+Pf9Jn+1dM/WFK5foe5EfJpp7MKx8zmUr/uE5lGETUtweZKKtqXJtCqxNo39oJ6cvfB5bE/",
	"Z112sY/twt2N65K/avXFhsp8PnxdzoRHKYiT+VA4ZBFTpD4AllHOYgV9mzb7S6q3UNLZlG/DC5ups+wD",
	"f32i3MzGm8aU6MqNmti7y4yF9rF9Ytwv84rZerupslLL+7MjGM2+VmSFr4agwOG1D3amb+mx59ZK5bOX",
	"te8hC5nioj5/JJh/SXEkx1MXyvokvR2J1xB3Bf66crPRUH9P5dmRsBtVnV0VnQ01ckS5sQziuFKk6Y2v",
	"eUiHXrFOfJKapocMlEq6QTA0awMuVfdZ59njgGT72f8BAAD//28e3gMRFAAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

