// Package spec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package spec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"HPwTAAD//0fCe69XIAAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

