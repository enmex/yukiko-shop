// Package spec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package spec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
