// Package spec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package spec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"/hkAAP//3kbpSzsoAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

