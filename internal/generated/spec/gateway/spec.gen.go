// Package spec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package spec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

